{"version":3,"sources":["components/showCPS.tsx","components/ControlPanel.tsx","components/ResultsModal.tsx","components/PrintLeaderboard.tsx","App.tsx","index.tsx"],"names":["ShowCPS","result","cpsRevealed","Col","clicks","time","calcCPS","RESULTS","ControlPanel","results","setResults","reveal","leaderboard","setLeaderboard","setHasResults","setVisible","useState","count","setCount","timer","setTimer","setCPS","isDisabled","setIsDisabled","disableStart","setStartIsDisabled","isActive","setIsActive","isStopped","setIsStopped","handleStop","newResult","useEffect","document","title","className","Button","onClick","increment","setInterval","clearInterval","disabled","ResultsModal","visible","addScore","id","setId","cps","hide","Modal","show","onHide","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","as","rows","value","onChange","ev","target","Footer","variant","PrintLeaderboard","sortedLb","i","hasResults","length","temp","maxIndex","j","Row","Table","scope","SCORES","App","scoreList","setScoreList","newScore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.da5cbc24.chunk.js","sourcesContent":["import { Col } from 'react-bootstrap';\r\nimport { Result } from '../interfaces/result';\r\n\r\nexport function ShowCPS({result, cpsRevealed}: {result: Result, cpsRevealed: boolean}): JSX.Element {\r\n    function calcCPS(result: Result) {\r\n        let cps: number;\r\n        cps = result.clicks/result.time;\r\n        return cps;\r\n    }\r\n    return <Col>\r\n        <p></p>\r\n        {cpsRevealed && <p>You got a CPS of {calcCPS(result)}</p>}\r\n        {cpsRevealed && <p>Press start again to retry!</p>}\r\n    </Col>\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Result } from '../interfaces/result';\r\nimport { Col, Button } from 'react-bootstrap';\r\n\r\nlet RESULTS:Result[] = [];\r\n\r\nexport function ControlPanel({results, setResults, reveal, leaderboard, setLeaderboard, setHasResults, setVisible}: {\r\n    results: number, setResults: (rs: number) => void, reveal: (r: boolean) => void, leaderboard: Result[], \r\n    setLeaderboard: (l: Result[]) => void, setHasResults: (h: boolean) => void, setVisible: (v: boolean) => void\r\n}): JSX.Element {\r\n    const [count, setCount] = useState(0);\r\n    const [timer, setTimer] = useState(15);\r\n    const [cps, setCPS] = useState<Result>(RESULTS[0] as Result);\r\n    const [isDisabled, setIsDisabled] = useState(true);\r\n    const [disableStart, setStartIsDisabled] = useState(false);\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [isStopped, setIsStopped] = useState(false);\r\n    \r\n\r\n    function addResult(newResult: Result) {\r\n        setLeaderboard([...leaderboard, newResult]);\r\n    }\r\n\r\n    const handleStart = () => {\r\n        setTimer(15);\r\n        setCount(0);\r\n        setStartIsDisabled(true);\r\n        setIsDisabled(false);\r\n        setIsActive(true);\r\n        reveal(false);\r\n        const increment = setInterval(() => {\r\n            setTimer((timer) => timer - 1);\r\n        }, 1000);\r\n        if (isStopped) {\r\n            clearInterval(increment);\r\n        }\r\n        setIsStopped(false);\r\n    }\r\n\r\n    const handleStop = () => {\r\n        addResult({ time: 15, clicks: count });\r\n        setResults(results + 1);\r\n        setCPS(leaderboard[results]);\r\n        setStartIsDisabled(false);\r\n        reveal(true);\r\n        setIsDisabled(true);\r\n        setIsActive(false);\r\n        setIsStopped(true);\r\n        setHasResults(true);\r\n        setVisible(true);\r\n        setTimer(0);\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = `You clicked ${count} times`\r\n        if (timer <= 0 && isActive) {\r\n            return () => handleStop();\r\n        }\r\n        if (timer < 0) {\r\n            setTimer(0);\r\n        }\r\n    });\r\n\r\n    return <Col>\r\n        <strong>{timer}</strong>\r\n        <p>You clicked {count} times!</p>\r\n        <div className=\"buttons\">\r\n            <Button onClick={handleStart} disabled={disableStart}>Start</Button>\r\n            <Button disabled={isDisabled} onClick={() => setCount(count+1)}>\r\n                Click me\r\n            </Button>\r\n        </div>\r\n    </Col>\r\n}","import { useState } from \"react\";\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport { Result } from '../interfaces/result';\r\nimport { Score } from '../interfaces/score';\r\n\r\nexport function ResultsModal({result, visible, setVisible, addScore}: {result: Result, visible: boolean, setVisible: (b: boolean) => void, addScore: (s: Score) => void}): JSX.Element {\r\n    const [id, setId] = useState(\"UserGuy18\");\r\n    let cps: number = 0;\r\n    if(visible){\r\n        cps = result.clicks/result.time;\r\n    }\r\n    function saveId() {\r\n        addScore({\r\n            id: id,\r\n            value: cps\r\n        });\r\n        setVisible(false);\r\n    }\r\n\r\n    const hide = () => setVisible(false);\r\n    return (\r\n        <Modal show={visible} onHide={hide}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Nice Clicking!</Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n            <Form>\r\n                <Form.Group className=\"mb-3\" controlId=\"addCardForm.idTextArea\">\r\n                    <Form.Label>Your name</Form.Label>\r\n                    <Form.Control as=\"textarea\" rows={3}\r\n                        value={id}\r\n                        onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setId(ev.target.value)}/>\r\n                </Form.Group>\r\n            </Form>\r\n            <p>Your CPS: {cps}</p>\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={hide}>Close</Button>\r\n                <Button variant=\"primary\" onClick={saveId}>Save changes</Button>\r\n            </Modal.Footer>\r\n        </Modal>)\r\n}","import { Row, Table } from 'react-bootstrap';\r\nimport { Score } from '../interfaces/score';\r\nimport React, { useEffect } from 'react';\r\n\r\nexport function PrintLeaderboard({sortedLb, hasResults}: {sortedLb: Score[], hasResults: boolean}): JSX.Element {\r\n    for(let i = 0; i < sortedLb.length-1; i++){\r\n        let temp: Score;\r\n        let maxIndex = i;\r\n        for (let j = i + 1; j < sortedLb.length; j++) {\r\n            if (sortedLb[j].value > sortedLb[maxIndex].value){\r\n                maxIndex = j;\r\n                temp = sortedLb[maxIndex];\r\n                sortedLb[maxIndex] = sortedLb[i];\r\n                sortedLb[i] = temp;\r\n            }\r\n        }\r\n    }\r\n    \r\n\r\n    return <Row>\r\n        <Table className=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Name</th>\r\n                    <th scope=\"col\">CPS</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <th scope=\"row\">1</th>\r\n                    {sortedLb[0] != null && <td>{sortedLb[0].id}</td>}\r\n                    {sortedLb[0] != null && <td>{sortedLb[0].value}</td>}\r\n                </tr>\r\n                <tr>\r\n                    <th scope=\"row\">2</th>\r\n                    {sortedLb[1] != null && <td>{sortedLb[1].id}</td>}\r\n                    {sortedLb[1] != null && <td>{sortedLb[1].value}</td>}\r\n                </tr>\r\n                <tr>\r\n                    <th scope=\"row\">3</th>\r\n                    {sortedLb[2] != null && <td>{sortedLb[2].id}</td>}\r\n                    {sortedLb[2] != null && <td>{sortedLb[2].value}</td>}\r\n                </tr>\r\n                <tr>\r\n                    <th scope=\"row\">4</th>\r\n                    {sortedLb[3] != null && <td>{sortedLb[3].id}</td>}\r\n                    {sortedLb[3] != null && <td>{sortedLb[3].value}</td>}\r\n                </tr>\r\n                <tr>\r\n                    <th scope=\"row\">5</th>\r\n                    {sortedLb[4] != null && <td>{sortedLb[4].id}</td>}\r\n                    {sortedLb[4] != null && <td>{sortedLb[4].value}</td>}\r\n                </tr>\r\n            </tbody>\r\n        </Table>\r\n    </Row>\r\n}","import './App.css';\r\nimport React, { useState } from 'react';\r\nimport { Result } from './interfaces/result';\r\nimport { Score } from './interfaces/score';\r\nimport { ShowCPS } from './components/showCPS';\r\nimport { ControlPanel } from './components/ControlPanel';\r\nimport { ResultsModal } from './components/ResultsModal';\r\nimport { PrintLeaderboard } from './components/PrintLeaderboard';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nlet RESULTS:Result[] = [];\r\nlet SCORES:Score[] = [];\r\n\r\nfunction App(): JSX.Element {\r\n  const [cpsRevealed, reveal] = useState(false);\r\n  const [results, setResults] = useState(-1);\r\n  const [visible, setVisible] = useState(false);\r\n  const [hasResults, setHasResults] = useState(false);\r\n  const [scoreList, setScoreList] = useState<Result[]>(RESULTS);\r\n  const [leaderboard, setLeaderboard] = useState<Score[]>(SCORES);\r\n\r\n  function addScore(newScore: Score) {\r\n    setLeaderboard([...leaderboard, newScore]);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Clicks Per Second</h1>\r\n      <h4>Click as fast as you can before time runs out!</h4>\r\n      <ControlPanel \r\n        results={results}\r\n        setResults={setResults}\r\n        reveal={reveal}\r\n        leaderboard={scoreList}\r\n        setLeaderboard={setScoreList}\r\n        setHasResults={setHasResults}\r\n        setVisible={setVisible}\r\n      ></ControlPanel>\r\n      <PrintLeaderboard sortedLb={leaderboard} hasResults={hasResults}></PrintLeaderboard>\r\n      <ShowCPS result={scoreList[results]} cpsRevealed={cpsRevealed}></ShowCPS>\r\n      <ResultsModal result={scoreList[results]} visible={visible} setVisible={setVisible}\r\n          addScore={addScore}></ResultsModal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n  );\r\n  \r\n  // If you want to start measuring performance in your app, pass a function\r\n  // to log results (for example: reportWebVitals(console.log))\r\n  // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}