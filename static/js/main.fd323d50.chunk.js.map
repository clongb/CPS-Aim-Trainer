{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","count","setCount","timer","setTimer","isDisabled","setIsDisabled","isActive","setIsActive","isStopped","setIsStopped","useEffect","document","title","className","onClick","increment","setInterval","clearInterval","disabled","ReactDOM","render","StrictMode","getElementById"],"mappings":"sMAoDeA,MAjDf,WACE,MAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAgCN,oBAAS,GAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAAkCR,oBAAS,GAA3C,mBAAOS,EAAP,KAAkBC,EAAlB,KA8BA,OAPAC,qBAAU,WAER,GADAC,SAASC,MAAT,sBAAgCZ,EAAhC,UACGE,GAAS,GAAKI,EACf,OAAO,kBATTD,GAAc,GACdE,GAAY,GACZE,GAAa,QACbN,EAAS,OAWT,sBAAKU,UAAU,MAAf,UACE,4BAAIX,IACJ,6CAAgBF,EAAhB,aACA,sBAAKa,UAAU,UAAf,UACE,wBAAQC,QAjCM,WAClBX,EAAS,IACTF,EAAS,GACTI,GAAc,GACdE,GAAY,GACZ,IAAMQ,EAAYC,aAAY,WAC5Bb,GAAS,SAACD,GAAD,OAAWA,EAAQ,OAC3B,KACAM,GACDS,cAAcF,GAEhBN,GAAa,IAsBT,mBACA,wBAAQS,SAAUd,EAAYU,QAAS,kBAAMb,EAASD,EAAM,IAA5D,6BCvCRmB,IAASC,OACL,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFV,SAASW,eAAe,U","file":"static/js/main.fd323d50.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\n\nfunction App(): JSX.Element {\n  const [count, setCount] = useState(0);\n  const [timer, setTimer] = useState(15);\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [isActive, setIsActive] = useState(false);\n  const [isStopped, setIsStopped] = useState(false);\n\n  const handleStart = () => {\n    setTimer(15);\n    setCount(0);\n    setIsDisabled(false);\n    setIsActive(true);\n    const increment = setInterval(() => {\n      setTimer((timer) => timer - 1);\n    }, 1000);\n    if(isStopped) {\n      clearInterval(increment);\n    }\n    setIsStopped(false);\n  }\n\n  const handleStop = () => {\n    setIsDisabled(true);\n    setIsActive(false);\n    setIsStopped(true);\n    setTimer(0);\n  }\n\n  useEffect(() => {\n    document.title = `You clicked ${count} times`\n    if(timer <= 0 && isActive){\n      return () => handleStop();\n    }\n  });\n\n  return (\n    <div className=\"App\">\n      <p>{timer}</p>\n      <p>You clicked {count} times!</p>\n      <div className=\"buttons\">\n        <button onClick={handleStart}>Start</button>\n        <button disabled={isDisabled} onClick={() => setCount(count+1)}>\n            Click me\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n  );\r\n  \r\n  // If you want to start measuring performance in your app, pass a function\r\n  // to log results (for example: reportWebVitals(console.log))\r\n  // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}